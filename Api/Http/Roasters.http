@CoffeeRecipes_HostAddress = {{Host}}
### Get All Roasters
GET {{CoffeeRecipes_HostAddress}}/Roasters/Query/all
Accept: application/json
Content-Type: application/json
### Get Roasters by City
GET {{CoffeeRecipes_HostAddress}}/Roasters/Query/city/{{CityId}}
Accept: application/json
Content-Type: application/json

### Get Details
GET {{CoffeeRecipes_HostAddress}}/Roasters/Query/details/{{RoasterId}}
Accept: application/json
Content-Type: application/json

### Add Roaster
POST {{CoffeeRecipes_HostAddress}}/Roasters/Editor
Accept: application/json
Content-Type: application/json
X-ApiKey: {{ApiKey}}

  {
    "Name": "Test Roaster",
    "CityId": "{{CityId}}"
  }

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.global.set("RoasterId", response.body.id)
%}

### Add Many Roaster
POST {{CoffeeRecipes_HostAddress}}/Roasters/Editor/Many
Accept: application/json
Content-Type: application/json
X-ApiKey: {{ApiKey}}

  [{
    "Name": "Roaster 1",
    "CityId": "01917b69-3581-40e9-af46-7b2fde6c83d1"
  },
  {
    "Name": "Roaster 2",
    "CityId": "01917b69-3581-40e9-af46-7b2fde6c83d1"
  }
  ]

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Update Roaster Logo

POST {{CoffeeRecipes_HostAddress}}/Roasters/File/{{RoasterId}}
Accept: image/png
Content-Type: multipart/form-data; boundary=WebAppBoundary
X-ApiKey: {{ApiKey}}

--WebAppBoundary
Content-Disposition: form-data; name="data"; filename="image.png"
Content-Type: application/json

< ./image.png
--WebAppBoundary--

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Update Roaster Name
PUT {{CoffeeRecipes_HostAddress}}/Roasters/Editor/Name
Accept: application/json
Content-Type: application/json
X-ApiKey: {{ApiKey}}

  {
    "Id": "{{RoasterId}}",
    "Name": "Test Roaster {{$random.alphanumeric()}}",
  }

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Update Roaster Description
PUT {{CoffeeRecipes_HostAddress}}/Roasters/Editor/description
Accept: application/json
Content-Type: application/json
X-ApiKey: {{ApiKey}}

  {
    "Id": "{{RoasterId}}",
    "Name": "Test Roaster {{$random.alphanumeric()}}",
  }

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Update Roaster Links
PUT {{CoffeeRecipes_HostAddress}}/Roasters/Editor/links
Accept: application/json
Content-Type: application/json
X-ApiKey: {{ApiKey}}

  {
    "Id": "{{RoasterId}}",
    "Urls": [
      "https://test.com"
    ],
  }

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Update Roaster Links
PUT {{CoffeeRecipes_HostAddress}}/Roasters/Editor/links
Accept: application/json
Content-Type: application/json
X-ApiKey: {{ApiKey}}

  {
    "Id": "{{RoasterId}}",
    "Urls": [
      "https://test.com"
    ],
  }

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Update Roaster Links
PUT {{CoffeeRecipes_HostAddress}}/Roasters/Editor/city
Accept: application/json
Content-Type: application/json
X-ApiKey: {{ApiKey}}

  {
    "Id": "{{RoasterId}}",
    "CityId": "{{CityId}}"
  }

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}